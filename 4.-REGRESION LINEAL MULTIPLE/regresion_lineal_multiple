import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Cargar el dataset
df = pd.read_csv('animia.csv', encoding='latin-1', delimiter=';')

# Seleccionar las columnas numéricas
numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns
print("Columnas numéricas:", numeric_columns)

# Elegir variables independientes (X) y la variable dependiente (y)
# Reemplaza 'CASOS' con el nombre de tu variable dependiente
X = df[['EDAD', 'ANIO', 'NORMAL']]  # Ejemplo: columnas predictoras
y = df['CASOS']  # Variable respuesta

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Crear el modelo de regresión lineal
model = LinearRegression()

# Entrenar el modelo con los datos de entrenamiento
model.fit(X_train, y_train)

# Predicciones en el conjunto de prueba
y_pred = model.predict(X_test)

# Evaluación del modelo
print("Coeficientes:", model.coef_)
print("Intercepto:", model.intercept_)
print("Error cuadrático medio (MSE):", mean_squared_error(y_test, y_pred))
print("R² Score:", r2_score(y_test, y_pred))

# Opcional: Mostrar resultados de predicciones
results = pd.DataFrame({'Real': y_test, 'Predicción': y_pred})
print(results.head())
