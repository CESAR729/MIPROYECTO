import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import Ridge
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Cargar el dataset
df = pd.read_csv('animia.csv', encoding='latin-1', delimiter=';')

# Ver los primeros registros del dataset
print(df.head())
print(df.columns)
print(df.info())

# Preprocesamiento de los datos
# Suponiendo que las columnas numéricas son las que queremos escalar
# Aquí ajustamos de acuerdo a tus datos, por ejemplo 'EDAD', 'CASOS', etc.
features = ['EDAD', 'CASOS', 'TOTAL']  # Asegúrate de incluir las columnas relevantes
target = 'NORMAL'  # Reemplaza con la columna objetivo que deseas predecir

# Separar las características (X) y la variable objetivo (y)
X = df[features]
y = df[target]

# Normalizar los datos (escala de 0 a 1)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Dividir los datos en entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Crear el modelo de Ridge (regularización L2)
ridge_model = Ridge(alpha=1.0)  # alpha es el parámetro de regularización

# Entrenar el modelo
ridge_model.fit(X_train, y_train)

# Realizar predicciones en el conjunto de prueba
y_pred = ridge_model.predict(X_test)

# Evaluar el modelo
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error (MSE): {mse}')

# Imprimir los coeficientes del modelo para ver la influencia de cada característica
print('Coeficientes de Ridge Regression:', ridge_model.coef_)
